/**   auther ： twocoldz*   date  ：Mon, 04 Nov 2013 13:19:22 +0800 *   锦赛图必有哈密顿路径**/#include <cstdio>#include <cstring>#include <algorithm>using namespace std;const int N=105;struct node{	int v,nxt;}edge[N*N];int map[N][N];int n,m,e;void Init(){	e=0;	memset(map,0,sizeof(map));}int main(){	int cases;	scanf("%d",&cases);	while(cases--)	{		scanf("%d",&n);		Init();		int a,b;		for(int i=0;i<(n)*(n-1)/2;i++)		{			scanf("%d %d",&a,&b);			map[a][b]=1;		}		for(int i=1;i<=n;i++)			map[0][i]=1;		edge[e].v=0;		edge[e].nxt=-1;		int head=e++;		for(int i=1;i<=n;i++)		{			int p=head;			//printf("%d\n",edge[p].nxt);			while(edge[p].nxt!=-1&&!(map[edge[p].v][i]&&map[i][edge[edge[p].nxt].v]))			{				//printf("p=%d edge[p].nxt=%d edge[p].v=%d\n",p,edge[p].nxt,edge[p].v);				p=edge[p].nxt;			}			edge[e].v=i;			edge[e].nxt=edge[p].nxt;			edge[p].nxt=e++;		}		int p=head;		p=edge[p].nxt;		for(int i=1;i<=n;i++)		{			i==n?printf("%d\n",edge[p].v):printf("%d ",edge[p].v);			p=edge[p].nxt;		}	}	return 0;}